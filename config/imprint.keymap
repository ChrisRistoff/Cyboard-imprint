#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NUMBER  1
#define FN  2
#define HOTKEY  3

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    combos {
        compatible = "zmk,combos";

        combo_lbrc {
            timeout-ms = <50>;
            key-positions = <16 17>; // KP: VB
            bindings = <&mt RBRC LBRC>;
            layers = <0 1 2 3 4 5>;
        };

        combo_rbrc {
            timeout-ms = <50>;
            key-positions = <18 19>; // KP: NM
            bindings = <&kp RBRC>;
            layers = <0 1 2 3 4 5>;
        };

        combo_lpar {
            timeout-ms = <50>;
            key-positions = <28 29>; // KP: FG
            bindings = <&mt RPAR LPAR>;
            layers = <0 1 2 3 4 5>;
        };

        combo_rpar {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp RPAR>;
            layers = <0 1 2 3 4 5>;
        };

        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <40 41>; // KP: RT
            bindings = <&mt RBKT LBKT>;
            layers = <0 1 2 3 4 5>;
        };

        combo_rbkt {
            timeout-ms = <50>;
            key-positions = <42 43>; // KP: YU
            bindings = <&kp RBKT>;
            layers = <0 1 2 3 4 5>;
        };

        capslock {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp CAPSLOCK>; // caps
            layers = <0>;
        };

        equal {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp EQUAL>;
            layers = <0>;
        };

        minus {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp MINUS>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEFAULT";
            bindings = <
&trans     &trans  &trans    &trans    &trans    &trans              &trans     &trans    &trans     &trans    &trans    &trans
&kp GRAVE  &kp N1  &kp N2    &kp N3    &kp N4    &kp N5              &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp EQUAL
&kp TAB    &kp Q   &kp W     &kp E     &kp R     &kp T               &kp Y      &kp U     &kp I      &kp O     &kp P     &kp BACKSPACE
&kp ESC    &kp A   &kp S     &kp D     &kp F     &kp G               &kp H      &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C     &kp V     &kp B               &kp N      &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp BSLH
&trans     &trans  &kp LGUI  &kp LALT  &trans                                   &trans    &kp LBKT   &kp RBKT  &trans    &trans
                                       &lt 1 SPACE &kp LCTRL &kp LALT  &mkp LCLK   &kp BSPC  &kp ENTER
                                       &kp LGUI  &mo 1    &mo 2      &mkp RCLK   &mo 2     &mo 1
            >;
        };

        Numpad_Nav_Layer {
            label = "NUMBER"
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans    &trans    &trans     &trans  &trans
&kp GRAVE &kp F1         &kp F2        &kp F3         &kp F4      &kp F5      &kp F6  &kp F7   &kp F8   &kp F9    &kp F10   &kp F11
&trans  &trans  &kp LS(LBKT) &kp UP  &kp LS(RBKT) &trans            &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans  &kp LEFT     &kp DOWN &kp RIGHT  &trans            &trans  &kp HOME  &kp UP    &kp END    &trans  &trans
&trans  &trans  &kp N4       &kp N5  &kp N6  &trans            &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans       &kp N0  &trans                            &trans    &trans    &trans     &trans  &trans
                                &trans  &trans  &trans    &trans  &trans    &trans
                                &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };

        Keyboard_Control_Layer {
            label = "HOTKEY"
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                  &trans  &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                  &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 4        &trans        &trans        &trans        &trans        &trans                  &trans  &trans           &trans           &trans           &trans           &to 4
&to 4        &trans        &trans        &trans        &trans                                        &trans           &trans           &trans           &trans           &to 4
                                                       &trans        &trans        &trans    &trans  &trans           &trans
                                                       &trans        &trans        &trans    &trans  &trans           &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans                               &trans  &trans  &trans  &trans  &trans
                                      &trans     &trans  &trans    &mkp LCLK &trans  &trans
                                      &trans     &trans  &trans    &mkp RCLK &trans  &trans
            >;
        };

    };
};

// right hand trackball configuration

// &trackball_peripheral_listener {
//    input-processors =
//     activate layer 3 within 500ms of the trackball moving
//     <&zip_temp_layer 3 500>;
// };

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
